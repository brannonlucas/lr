#!/usr/bin/env node

/**
 * Module dependencies.
 */

var program = require('commander');
var TTY = require('tty');

/**
 * Configure and expose `program`.
 */

module.exports = program
  .version(require('../package.json').version)
  .usage('[options] [path]:[command] ...')
  .option('-p, --port <port>', 'listen on port', 35729)
  .option('-m, --mute <char>', 'character to suppress reloading', '@')
  .option('-c, --config <path>', 'path to configuration file')
  .option('-C, --no-config', 'ignore all config files')
  .option('-i, --ignore <pattern>,...', 'regular expressions(s) of files to ignore', list, [])
  .option('-v, --verbose', 'more detailed log messages')
  .option('-s, --silent', 'suppress all log messages', tty)
  .option('-o, --stdout', 'write log messages to process stdout', false)
  .option('-I, --indent', 'don\'t print indentation lines', tty(false))
  .parse(process.argv);

var Lr = require('..');

// initialize `Livereload`

var lr = typeof Lr === 'function'
  ? new Lr(program)
  : program;

program.args.forEach(function run(arg) {
  var parts = arg.split(':');
  var path = parts[0];
  var command = parts[1];

  var opts = {
    mute: program.mute
  };

  lr.run(path, command, opts, function() {
    // TODO maybe get rid of this. maybe not.
  });
});

/**
 * Parse list.
 */

function list(str) {
  return str.split(/ *, */);
}

function tty(status) {
  // TODO finish this
  /* process.stdout.write('\n@@@@' + TTY.isatty() + '\n'); */
}

